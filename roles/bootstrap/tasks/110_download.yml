---
- name: downloading...
  debug:
    msg: "{{ download.url }}"
  when: "{{ download.enabled|bool and not download.container|bool }}"

- name: Create destination directories for binaries
  file: path={{local_artifactory_dir}}/{{download.dest|dirname}} state=directory recurse=yes
  when: "{{ download.enabled|bool and not download.container|bool }}"

- name: Download items
  get_url:
    url: "{{download.url}}"
    dest: "{{local_artifactory_dir}}/{{download.dest}}"
    sha256sum: "{{download.sha256 | default(omit)}}"
    owner: "{{ download.owner|default(omit) }}"
    mode: "{{ download.mode|default(omit) }}"
  register: get_url_result
  until: "'OK' in get_url_result.msg or 'file already exists' in get_url_result.msg"
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  when: "{{ download.enabled|bool and not download.container|bool }}"

- name: pulling...
  debug:
    msg: "{{ download.repo }}:{{ download.tag }}"
  when: "{{ download.enabled|bool and download.container|bool }}"


#NOTE(bogdando) this brings no docker-py deps for nodes
- name: Download containers
  command: "/usr/bin/docker pull {{ download.repo }}:{{ download.tag }}"
  register: pull_task_result
  until: pull_task_result.rc == 0
  retries: 4
  delay: "{{ retry_stagger | random + 3 }}"
  when: "{{ download.enabled|bool and download.container|bool }}"
  run_once: "{{ download_run_once|bool }}"

- set_fact:
    fname: "{{container_destination_dir}}/{{download.repo|regex_replace('/|\0|:', '_')}}:{{download.tag|regex_replace('/|\0|:', '_')}}.tar"

- name: Download | save container images
  shell: docker save "{{ download.repo }}:{{ download.tag }}" > "{{ fname }}"
  run_once: true
  when: not download_run_once|bool and download.enabled|bool and download.container|bool

